apiVersion: apps/v1
kind: {{ .Values.prometheus.kind }}
metadata:
  name: {{ .Values.prometheus.name }}
  {{- with .Values.prometheus.labels }}
  labels:
    {{- toYaml .  | nindent 4 }}
  {{- end}}
  namespace: {{ .Values.global.namespace }}
spec:
  replicas: {{ .Values.prometheus.replica }}
  serviceName: {{ .Values.prometheus.service.name }}
  selector:
    {{- with .Values.prometheus.labels }}
    matchLabels:
      {{- toYaml . | nindent 6 }}
    {{- end}}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.prometheus.labels }}
      labels:
        {{- toYaml . | nindent 8 }}
      {{- end}}
    spec:
      serviceAccountName: {{ .Values.prometheus.serviceAccountName }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.prometheus.name }}
          args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.retention.time=30d
            - --storage.tsdb.path=/data
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.prometheus.image}}
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          resources:
            requests:
              memory:  {{ .Values.prometheus.resources.requests.memory }}
              cpu: {{ .Values.prometheus.resources.requests.cpu }}
            limits:
              memory: {{ .Values.prometheus.resources.limits.memory }}
              cpu: {{ .Values.prometheus.resources.limits.cpu }}
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: {{ .Values.prometheus.port.number }}
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: {{ .Values.prometheus.port.number }}
            timeoutSeconds: 5  
          volumeMounts:
            - name: {{ .Values.prometheus.volume.config }}
              mountPath: /etc/prometheus/prometheus.yml
              subPath: prometheus.yml
            - name: {{ .Values.prometheus.volume.data }}
              mountPath: /data
          ports:
            - containerPort: {{ .Values.prometheus.port.number }}
      volumes:
        - name: {{ .Values.prometheus.volume.config }}
          configMap:
            name: {{ .Values.prometheus.configMap.name }}    
        - name: {{ .Values.prometheus.volume.data }}
        {{- if eq .Values.global.env.local true }}
          emptyDir: {}
        {{- end }}
        {{- if eq .Values.global.env.local false }}
          persistentVolumeClaim:
            claimName: {{ .Values.prometheus.pvc.name }}
        {{- end }}



